.\" Man page for _printf
.\" Date: November 28, 2024
.\" Manual: Custom C Library Functions
.TH _PRINTF 3 "November 28, 2024" "Custom C Library" "_printf Manual"

.SH NAME
_printf \- formats and prints strings and variables to standard output

.SH SYNOPSIS
.nf
.B #include "main.h"
.BI "int _printf(const char *" format ", ...);"
.fi

.SH DESCRIPTION
The \fB_printf\fR function formats and prints output to the standard output.
It supports a subset of format specifiers, including:

.TP
\fB%c\fR
Prints a single character.

.TP
\fB%s\fR
Prints a string.

.TP
\fB%%\fR
Prints a percent sign.

.TP
\fB%d\fR or \fB%i\fR
Prints a signed decimal integer.

Flags, field widths, and precision are not fully implemented in this version.

.SH RETURN VALUE
The \fB_printf\fR function returns the total number of characters printed,
excluding the null byte used to end output to strings. If an error occurs,
such as if \fBformat\fR is \fBNULL\fR, the function returns \fB-1\fR.

.SH EXAMPLES
.PP
Example 1: Printing a simple string
.EX
_printf("Hello, World!\\n");
Output: Hello, World!
.EE

.PP
Example 2: Printing multiple variables
.EX
_printf("Character: %c, String: %s, Number: %d\\n", 'A', "example", 123);
Output: Character: A, String: example, Number: 123
.EE

.PP
Example 3: Escaping the percent sign
.EX
_printf("Print 100%% accurate!\\n");
Output: Print 100% accurate!
.EE

.SH AUTHORS
Luke Holley-Boutillier
Imli Veliu
